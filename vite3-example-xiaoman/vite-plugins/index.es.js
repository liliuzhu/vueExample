import e from"path";import t from"fs";import o from"qiniu";import s from"ora";const n=(e,t,o,s)=>`${s?"重试失败的文件:":"七牛云上传中:"} 已上传 ${Math.round(e/o*100)}% ${e}/${o} ， ${t} 个文件上传失败`;class i{constructor(e){this.options=e}uploadFiles(){let t=this.options.assets,i=this.options.exclude,r=this.options.include,l=this.options.batch||20,c=this.options.maxRetryTimes||3,a=new o.auth.digest.Mac(this.options.accessKey,this.options.secretKey),u=new o.conf.Config,p=this.options.bucket,h=o.zone[this.options.zone];h&&(u.zone=h);let m=this.options.path,f=Object.keys(t),g=0,d=0,b=[],y=0,P=e=>{w.succeed(),console.log("\n")};f=f.filter((e=>(!i||!i.test(e))&&(!r||r.test(e)))),g=f.length,console.log("\n");let w=s({text:n(0,b.length,g,!1),color:"green"}).start();const x=function(s,i){t[s];let r=e.posix.join(m,s);return new o.rs.PutPolicy({scope:p+":"+r}).uploadToken(a),new o.form_up.FormUploader(u),new o.form_up.PutExtra,new Promise((e=>{let t=Date.now();console.log("////////",o),setTimeout((()=>{d++;const o={};w.text=n(d,b.length,g,i),o.duration=Date.now()-t,e(o)}),1e3)}))},$=function(e){if(e)return console.log("\n"),Promise.reject(e);y<0&&(y=0);let t=b.splice(0,l<=y?l:y);return y-=t.length,t.length?Promise.all(t.map((e=>x(e,!0)))).then((()=>$()),$):b.length?Promise.reject(new Error("文件上传失败")):Promise.resolve()},j=function(e){if(e)return console.log("\n"),Promise.reject(e);let t=f.splice(0,l);return t.length?Promise.all(t.map((e=>x(e,!1)))).then((()=>j()),j):Promise.resolve()};j().then((()=>(y=b.length*c,$()))).then((()=>P()),P)}}const r={enable:!0,accessKey:"",secretKey:"",bucket:"",path:"[hash]",zone:"",exclude:/index\.html$/,root:"/"};function l(e,o=e){return t.readdirSync(e).map((s=>{const n=`${e}/${s}`,i=t.lstatSync(n);return i.isDirectory()?l(n,o):i.isFile()?{name:o?n.replace(`${o}/`,""):s,existsAt:n}:void 0})).flat()}function c(t){const o=Object.assign({},r,t);return{name:"vite-plugin-qiniu",enforce:"post",apply:"build",configResolved(t){const s=e.resolve(t.root,t.build.outDir);o.sourceFilesDir=o.sourceFilesDir||s;["accessKey","secretKey","bucket","path"].forEach((e=>{o[e]||(console.log(` 插件 参数${e} 必须填写`),o.enable=!1)}))},closeBundle(){if(o.enable){let e=l(o.sourceFilesDir),t={};e.forEach((e=>{t[e.name]=e})),new i(Object.assign(Object.assign({},o),{assets:t})).uploadFiles()}else console.log("已禁用 可设置enable: true 开启")}}}export{c as default};
//# sourceMappingURL=index.es.js.map
